from getpass import getpass
import time
from saveData import BotData
from instaclient import InstaClient
from instaclient.errors import *

USERNAME = 'cricetonzi'
PASSWORD = 'samuele222002'

class Bot:
	PATH = 'c:\dev\instapy\\bin\chromedriver.exe'
	data: BotData = BotData()
	client1 = InstaClient(driver_path='c:\dev\instapy\\bin\chromedriver.exe')
	client2 = InstaClient(driver_path='c:\dev\instapy\\bin\chromedriver.exe')

	def __init__(self):
		try:
				self.client1.login(username=USERNAME, password=PASSWORD) # Go through Login Procedure
				self.client2.login(username=USERNAME, password=PASSWORD) # Go through Login Procedure
		except VerificationCodeNecessary:
				# This error is raised if the user has 2FA turned on.
				code = input('Enter the 2FA security code generated by your Authenticator App or sent to you by SMS')
				self.client1.input_verification_code(code)
				self.client2.input_verification_code(code)
		except SuspisciousLoginAttemptError as error:
				# This error is reaised by Instagram
				if error.mode == SuspisciousLoginAttemptError.EMAIL:
						code = input('Enter the security code that was sent to you via email: ')
				else:
						code = input('Enter the security code that was sent to you via SMS: ')
				self.client.input_security_code(code)


	def addFollowedToList(self):
		for account in self.data.toScrape():
    
			followers = self.client1.get_following(user=account, count=500)
			
			for i in followers[0]:
				self.data.addFound(i.username +'\n')
		
			self.data.saveFound()
			self.data.scraped(account)

	def sendMessages(self, delay=1, message='placeholder'):
		for user in self.data.getAccounts():
			self.client2.send_dm(user, message)

			time.sleep(60 * delay)
			self.data.makeDone(user)
			self.data.saveFound()
			print('Message sent to {acc}'.format(acc=user))
